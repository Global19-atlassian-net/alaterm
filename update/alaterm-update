#!/bin/bash
# This script updates installed Alaterm.
# Applies to version 1.x or 2.x, auto-detected.
# Usage:
# Place this update folder in your Alaterm home directory.
# Launch Alaterm.
# Enter this folder, then command:  bash alaterm-update

let v1latest=70
let v2latest=210

export uhere="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
cd "$uhere" # Update templates are relative to $uhere.

if [ ! -r "/status" ] && [[ "$PWD" =~ TAexp-min ]] ; then # Developer only.
	export alatermTop="$PREFIX/../../alaterm-dev"
	export launchCommand="alaterm-dev"
	export zzzz="$alatermTop"
	export termuxPrefix="$PREFIX"
	export termuxHome="$HOME"
	export userLocale="te_ST"
	let scriptRevision=200
	[ -r "$zzzz/status" ] && source "$zzzz/status"
elif  [ -r "/status" ] ; then # Anyone else must be within Alaterm.
	chmod 755 "$alatermTop"
	chmod 644 "/status"
	source /status
else
	echo "PROBLEM. Did not find readable /status file."
	echo "This script must be launched from within Alaterm."
	echo "Its update folder must be in Alaterm home."
	exit 1
fi

if [ "$scriptRevision" = "" ] || [ "$scriptRevision" -lt 40 ] ; then
	echo "Your Alaterm installation is too old for updates."
	echo "Nothing done."
	exit 1
fi

if [ "$scriptRevision" -lt "$v1latest" ] ; then
	let whichv=1
elif [ "$scriptRevision" -lt "$v2latest" ] ; then
	let whichv=2
else
	echo "Your installation is up-to-date."
	echo "Its scriptRevision is $scriptRevision"
	echo "Nothing done."
	exit 0
fi


## Required functions:
## ---------------------------------------------------------------------------
# install_template creates an Alaterm file, from a file in templates folder.
install_template() { # Takes 1 or 2 arguments: filename in /templates, chmod.
	t="$uhere/templates/$1"
	if [ ! -f "$t" ] ; then
		echo -e "$PROBLEM cannot locate update file:"
		echo "  templates/$1"
		exit 1
	fi
	if [ "$#" -gt 2 ] ; then
		echo -e "$PROBLEM More than 2 arguments for:"
		echo "  install_template $1"
		exit 1
	fi
	if [ "$#" = "2" ] ; then # Optional chmod.
		ok="no"
		[[ "$2" =~ ^[1-7][0-7][0-7]$ ]] && ok="yes" # 3 digits.
		[[ "$2" =~ ^[0=7][1-7][0-7][0-7]$ ]] && ok="yes" # 4 digits.
		if [ "$ok" != "yes" ] ; then
			echo -e "$PROBLEM Bad chmod code $2 for:"
			echo "  install_template $1."
			exit 1
		fi
	fi
	fs="" # Initialize.
	fs="$(grep "laterm:file=" $t 2>/dev/null)" # Find the instruction.
	# Extract destination filename from filestring:
	fs="$(echo $fs | sed 's/.*laterm:file=//')"
	fs="$(echo $fs | sed 's/ .*//')" # Destination ends at space.
	if [ "$fs" = "" ] ; then
		echo -e "$PROBLEM Cannot find instruction, Alaterm:file="
		echo "  in templates/$1."
		exit 1
	fi
	# Expand filestring variables, if present.
	# These are paths containing / so alternative ! must be used in sed:
	fs="$(echo $fs | sed "s!\$alatermTop!$alatermTop!")"
	fs="$(echo $fs | sed "s!\$PREFIX!$PREFIX!")"
	fs="$(echo $fs | sed "s!\$HOME!$HOME!")"
	fs="$(echo $fs | sed "s!\$launchCommand!$launchCommand!")"
	# If necessary, create the directory path:
	dir="$(echo $fs | sed 's![^/]*$!!')" # Path only.
	mkdir -p "$dir" 2>/dev/null
	if [ "$?" -ne 0 ] ; then
		echo -e "$PROBLEM Cannot create directory:"
		echo "  $dir"
		echo "  required by install_template $1."
		exit 1
	fi
	sleep .05
	cp "$t" "$fs"
	sleep .05
	sed -i '/laterm:file=/d' "$fs" # Remove instruction line.
	# After removing instruction, most templates are installed verbatim.
	# Use PARSE for variables that must be expanded there.
	sed -i "s!PARSE\$launchCommand!$launchCommand!" "$fs"
	sed -i "s!PARSE\$alatermTop!$alatermTop!" "$fs"
	sed -i "s!PARSE\$userLocale!$userLocale!" "$fs"
	sed -i "s!PARSE\$PREFIX!$PREFIX!" "$fs" # Termux.
	sed -i "s!PARSE\$HOME!$HOME!" "$fs" # Termux.
	# chmod if specified:
	if [ "$#" = "2" ] ; then
		chmod "$2" "$fs"
	else
		chmod 644 "$fs"
	fi
	sleep .05
} # End install_template.


## Updates applicable to versions 1 and 2:
## ---------------------------------------------------------------------------

# Make backup copy of original status file:
if [ -f "$zzzz/status" ] && [ ! -f "$zzzz/status.orig" ] ; then
	cp "$zzzz/status" "$zzzz/status.orig"
fi

# Fix missing -p here:
thisfile="$zzzz/usr/local/scripts/compile-libmpeg2"
sed -i 's!mkdir ~/\.source!mkdir -p ~/\.source!' "$thisfile"

# If user downloaded the help files with this, reinstall them:
if [ -d ../v2installer/help-alaterm ] ; then
	mkdir -p "$zzzz/usr/local/help-alaterm"
	cp ../v2installer/help-alaterm/* "$zzzz/usr/local/help-alaterm/"
fi

# Original detected command directory. Should detect if in active Alaterm:
thisfile="$zzzz/usr/local/scripts/$launchCommand"
sed -i 's/grep files/grep \/data\/data/' "$thisfile"
cp "$thisfile" "$PREFIX/bin/"

# Un-fix a bad update to vncserver:
rm -f "/usr/local/scripts/start-vnc" # Was incorrectly listed as bash.
install_template "start-vnc.pl" "755" # Perl.
bp="$zzzz/home/.bash_profile"
sed -i 's/^vncserver/\/usr\/local\/scripts\/start-vnc/' "$bp"


## Updates only applicable to version 1:
## ---------------------------------------------------------------------------

if [ "$whichv" -eq 1 ] ; then
##
thisfile="$termuxPrefix/bin/$launchCommand"
stor="[ -d /storage ] && prsUser+=\"-b /storage \""
odm="[ -d /odm ] && prsuser+=\" -b /odm\""
prd="[ -d /product ] && prsuser+=\" -b /product\""
grep "$odm" "$thisfile" >/dev/null 2>&1
if [ "$?" -ne 0 ] ; then
	sed -i "s!$stor!$stor\n$odm\n$prod!" "$thisfile"
	cp "$thisfile" "$zzzz/usr/local/scripts/"
	rm -f "$zzzz/launchCommand"
fi

# Method for fixing dbus-launch changed:
dir="$zzzz/etc/pacman.d/hooks"
mv "$dir/fixdbuslaunch.hook" "$dir/dbus-programs.hook" 2>/dev/null
dir="$zzzz/usr/local/scripts"
rm -f "$dir/fixdbuslaunch"
if [ ! -f "$zzzz/usr/local/scripts/dbus-programs" ] ; then
	cat <<- 'EOC' > "$zzzz/usr/local/scripts/dbus-programs"
	#!/bin/bash
	progdbus="org.gnome.gedit org.gnome.font-viewer gimp"
	progdbus+=" lxappearance kid3-qt ciano inkscape hugin"
	usa="/usr/share/applications"
	edrs="Exec=dbus-run-session " # Note space.
	hlsa="/home/.local/share/applications"
	mkdir -p "$hlsa" && cd "$hlsa"
	for p in "$progdbus" ; do
		if [ -f "$usa/$p.desktop" ] ; then
			cp "$usa/$p.desktop" "."
			sed -i 's!Exec=!$edrs!' "$p.desktop"
		else
			rm -f "$p.desktop"
		fi
	done
	EOC
	chmod 755 "$zzzz/usr/local/scripts/dbus-programs"
fi
#
echo "let scriptRevision=$v1latest" >> "$zzzz/status"
fi # End whichv -eq 1.
##


## Updates only applicable to version 2:
## ---------------------------------------------------------------------------

if [ "$whichv" -eq 2 ] ; then
##
thisfile="$termuxPrefix/bin/$launchCommand"
odm="[ -d /odm ] && prsuser+=\" -b /odm\""
prd="[ -d /product ] && prsuser+=\" -b /product\""
grep "$prd" "$thisfile" >/dev/null 2>&1
if [ "$?" -ne 0 ] ; then
	sed -i "s!$odm!$odm\n$prod!" "$thisfile"
	cp "$thisfile" "$zzzz/usr/local/scripts/"
	rm -f "$zzzz/launchCommand"
fi
#
echo "let scriptRevision=$v2latest" >> "$zzzz/status"
fi # End whichv -eq 2.
##


##
sleep 1 # So that it looks like something happened.
echo "Update complete."
exit 0
##

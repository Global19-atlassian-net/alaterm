#!/bin/bash
# This script updates installed Alaterm.
# Ordinary usage, from within launched Alaterm:
# Enter this folder, then command:  bash update-alaterm

let v2latest=220

# Location of this script file, even if called from somewhere else:
export here="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
cd "$here" # Update component files are relative to $here.

# Quick test for downloaded stuff. Does not test everything:
gotupstuff="yes"
[ ! -d "$here/help-alaterm" ] && gotupstuff="no"
[ ! -d "$here/templates" ] && gotupstuff="no"
[ ! -d "$here/process" ] && gotupstuff="no"
[ ! -f "$here/process/globals.bash" ] && gotupstuff="no"
if [ "$gotupstuff" = "no" ] ; then
	echo -e "$PROBLEM You do not have all the necessary files."
	echo "Get all of the Alaterm repository ZIP, at:"
	echo "  https://github.com/cargocultprog/alaterm"
	echo "Unzip it in launched Alaterm, and try again."
	exit 1
fi

# This is update, not install:
if [ -d "$alatermTop" ] ; then
	chmod 755 "$alatermTop"
else
	[ -z "$devmode" ] && echo -e "$PROBLEM Cannot find Alaterm."
	[ ! -z "$devmode" ] && echo -e "$PROBLEM No alaterm-dev."
	echo "Did you install it?"
	exit 1
fi

# Test for /status:
if [ -f "$alatermTop/status" ] ; then
	chmod 644 "$alatermTop/status"
	if [ ! -f "$alatermTop/alastat.orig" ] ; then
		cp "$alatermTop/status" "$alatermTop/alastat.orig"
		[ "$devmode" != "test" ] && chmod 444 "$alatermTop/alastat.orig"
	fi
else
	if [ -f "$alatermTop/alastat.orig" ] ; then
		cp "$alatermTop/alastat.orig" "$alatermTop/status"
		chmod 644 "$alatermTop/status"
		echo -e "$WARNING Missing status file."
		echo "Found alastat.orig."
		echo "Copied alastat.orig to status. Using it."
	else
		echo -e "$PROBLEM. Cannot find status file."
		echo "Without it, cannot update Alaterm."
		exit 1
	fi
fi

# Test whether Alaterm needs update:
source "$alatermTop/status"
if [ "$scriptRevision" = "" ] || [ "$scriptRevision" -lt 40 ] ; then
	echo "Your Alaterm installation is too old for updates."
	echo "Nothing done. If Alaterm is working, no problem."
	echo "If Alaterm is failing, consider fresh re-install."
	exit 1
elif [ "$scriptRevision" -ge "$v2latest" ] ; then
	echo "Your installation is up-to-date."
	echo "Its scriptRevision is $scriptRevision"
	echo "Nothing done."
	exit 0
fi

# Generic finish:
update_done() {
	echo "let scriptRevision=$v2latest" >> "$alatermTop/status"
	printf " $DONE.\n"
	exit 0
}


## BEGIN UPDATES.
## ---------------------------------------------------------------------------
# How to list updates:
# Updates are grouped by v2latest, with most recent listed first.
# Current scriptRevision is checked, at the beginning of each group.
# Most updates involve installing templates.
# Place install_template FILENAME only in the most recent group.

printf "Updating Alaterm..."
# Always re-install help files, to ensure latest:
cp -r "$here/help-alaterm" "$alatermTop/usr/local/"
printf "."


### Begin group of updates past 222 and including v2latest=224:
[ "$scriptRevision" -ge 224 ] && update_done
# Updates for 224 go here. None yet.
### End group of updates past 222 and including v2latest=224.


### Begin group of updates past 220 and including v2latest=222:
[ "$scriptRevision" -ge 222 ] && update_done
# Updates for 222 go here. None yet.
### End group of updates past 220 and including v2latest=222.


### Begin group of updates up to and including v2latest=220:
# This is the earliest group using update-alaterm script.
[ "$scriptRevision" -ge 220 ] && update_done
## In case this was not done earlier:
mkdir -p "$alatermTop/system"
mkdir -p "$alatermTop/vendor"
mkdir -p "$alatermTop/odm"
mkdir -p "$alatermTop/home/.config/dbus"
mkdir -p "$alatermTop/home/.local/share/applications"
## Remove obsolete files:
rm -f "$alatermTop/usr/local/scripts/start-vnc" # Perl, not bash.
rm -f "$alatermTop/usr/local/scripts/stop-vnc" # Obsolete.
rm -f "$alatermTop/usr/bin/$launchCommand" # Now in /usr/local/scripts.
rm -f "$alatermTop/etc/pacman.d/hooks/fixdbuslaunch.hook" # Obsolete.
rm -f "$alatermTop/usr/local/scripts/fixdbuslaunch" # Obsolete.
rm -r -f "$alatermTop/usr/local/alaterm-help" # Now help-alaterm.
rm -f "$alatermTop/status.orig" # Now alastat.orig.
## Install or reinstall templates that should not have user customization:
install_template "autoremove.bash" "755" && printf "."
install_template "ban-menu-items.bash" "755" && printf "."
install_template "ban-menu-items.hook" && printf "."
install_template "bash.bash_logout.bash" && printf "."
install_template "bash.bashrc.bash" && printf "."
install_template "compile-libde265.bash" "755" && printf "."
install_template "compile-libmad.bash" "755" && printf "."
install_template "compile-libmpeg2.bash" "755" && printf "."
install_template "dbus-programs.bash" "755" && printf "."
install_template "dbus-programs.hook" && printf "."
install_template "default-resolution.bash" "755" && printf "."
install_template "home.bash_profile.bash" && printf "."
install_template "home.vnc-xstartup.bash" "755" && printf "."
install_template "home.xinitrc.bash" && printf "."
install_template "launchcommand.bash" "755" && printf "."
install_template "menu.xml" && printf "."
install_template "mimeapps-list.bash" "755" && printf "."
install_template "mimeapps-list.hook" && printf "."
install_template "nanorc.conf" && printf "."
install_template "pkg.bash" "755" && printf "."
install_template "profile.bash" && printf "."
install_template "ps.bash" "755" && printf "."
install_template "readme-local.md" && printf "."
install_template "readme-trash.md" && printf "."
install_template "start-vnc.pl" "755" && printf "."
install_template "top.bash" "755" && printf "."
install_template "vncserver.bash" "755" && printf "."
install_template "vncviewer.bash" "755" && printf "."
## May have been mis-installed:
thisfile="$alatermTop/home/.Xdefaults"
[ ! -f "$thisfile" ] && install_template "home.Xdefaults.conf" && printf "."
thisfile="$alatermTop/home/.config/TUG/TeXworks.conf"
if [ -f "$thisfile" ] ; then
	grep PARSE "$thisfile" >/dev/null 2>&1
	if [ "$?" -eq 0 ] ; then
		sed -i "s!PARSE\$userLocale!$userLocale!" "$thisfile"
	fi
	printf "."
else
	install_template "TeXworks.conf" && printf "."
fi
## Remove bad line from bookmarks:
thisfile="$alatermTop/home/.config/gtk-3.0/bookmarks"
if [ -f "$thisfile" ] ; then
	sed -i '/file=/d' "$thisfile" && printf "."
else
	install_template "bookmarks.conf" && printf "."
fi
## Remove obsolete lines from /home/.bashrc. Aliases now in .bash_profile:
thisfile="$alatermTop/home/.bashrc"
sed -i '/alias ls/d' "$thisfile"
sed -i '/alias pacman/d' "$thisfile"
sed -i '/alias fc-cache/d' "$thisfile"
sed -i '/alias vncviewer/d' "$thisfile"
sed -i '/installed vncviewer/d' "$thisfile" && printf "."
## Reinstall launch command:
cp "$alatermTop/usr/local/scripts/$launchCommand" "$termuxPrefix/bin"
# These templates do not need edit or reinstall:
# root.bashrc.bash
# root.bash_profile.bash
# lxde-rc.xml
# home.vnc-config.conf
# panel.conf
# desktop-items-0.conf
# These templates are only used during initial install. Never reinstalled:
# getlxde-profile.bash
# getlxde-launch.bash
# prelim-profile.bash
# prelim-launch.bash
update_done
##
